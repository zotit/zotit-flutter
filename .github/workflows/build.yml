name: Zotit CI

on:
  push:
    branches: [ "main" ]
    tags:
      - '*'
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest,windows-latest]
    runs-on: ${{ matrix.os }}
    # env:
    #   bin_name: api
    outputs:
      sha_short: ${{ steps.short_hash.outputs.sha_short }}

    steps:
    - uses: actions/checkout@v3
    
    - name: Declare some variables
      id: short_hash
      shell: bash
      run: |
        echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
        
    - name: Install prequisites
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt install zip 

    - name: Setup Flutter 
      uses: subosito/flutter-action@v2
      with:
        channel: 'stable' # or: 'beta', 'dev' or 'master'
    
    - name: Web Build
      if: matrix.os == 'ubuntu-latest'
      run: |
        flutter pub get
        flutter build web --release
    
    - name: Firefox Extension Build
      if: matrix.os == 'ubuntu-latest'
      run: |
        flutter pub get
        flutter build web --web-renderer html --csp --release --output build/firefox_ext
        cp ext_data/manifests/manifest2.json build/firefox_ext/manifest.json
        cp ext_data/index.html build/firefox_ext/index.html
        cp ext_data/override.js build/firefox_ext/override.js
        rm -rf build/firefox_ext/canvaskit
        rm  build/firefox_ext/flutter.js
        rm  build/firefox_ext/flutter_service_worker.js
      
    - name: Chrome Extension Build
      if: matrix.os == 'ubuntu-latest'
      run: |
        flutter pub get
        flutter build web --web-renderer html --csp --release --output build/chrome_ext
        cp ext_data/manifests/manifest3.json build/chrome_ext/manifest.json
        cp ext_data/index.html build/chrome_ext/index.html
        cp ext_data/override.js build/chrome_ext/override.js
        rm -rf build/chrome_ext/canvaskit
        rm  build/chrome_ext/flutter.js
        rm  build/chrome_ext/flutter_service_worker.js
  
    - name: Windows Build
      if: matrix.os == 'windows-latest'
      run: |
        flutter pub get
        flutter build windows --release

    - name: Zip Web dist
      if: matrix.os == 'ubuntu-latest'
      run: cd build/web/ && zip -r web-dist.zip .
    
    - name: Zip Firefox dist
      if: matrix.os == 'ubuntu-latest'
      run: cd build/firefox_ext/ && zip -r firefox-dist.zip .    

    - name: Zip Chrome dist
      if: matrix.os == 'ubuntu-latest'
      run: cd build/chrome_ext/ && zip -r chrome-dist.zip .

    - name: Zip Windows dist
      if: matrix.os == 'windows-latest'
      run: cd build/windows/runner/Release && Compress-Archive .  windows-dist.zip
    
    - uses: actions/upload-artifact@v3
      if: matrix.os == 'windows-latest'
      with:
        name: zotit-${{ matrix.os }}
        path: build/windows/runner/Release/windows-dist.zip
        retention-days: 1 
    
    - uses: actions/upload-artifact@v3
      if: matrix.os == 'ubuntu-latest'
      with:
        name: zotit-${{ matrix.os }}
        path: build/web/web-dist.zip
        retention-days: 1 
    
    - uses: actions/upload-artifact@v3
      if: matrix.os == 'ubuntu-latest'
      with:
        name: zotit-${{ matrix.os }}
        path: build/firefox_ext/firefox-dist.zip
        retention-days: 1 
    
    - uses: actions/upload-artifact@v3
      if: matrix.os == 'ubuntu-latest'
      with:
        name: zotit-${{ matrix.os }}
        path: build/chrome_ext/chrome-dist.zip
        retention-days: 1 
  
  release:
    name: "Prelease"
    needs: build
    runs-on: ubuntu-latest
    steps:
      # We don't need the repo, grab all artifacts from the build stage
      # The plugin puts each artifact in a folder of `artifactname`
      - uses: actions/download-artifact@v3
      - name: Display fetched artifacts
        run: ls -R
      
      - name: Emit a Github Release
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: ${{needs.build.outputs.sha_short}}
          prerelease: false
          title: ${{ github.event.head_commit.message }}
          files: |
            zotit-ubuntu-latest/*.zip
            zotit-windows-latest/*.zip
      
      
    # - name: release
    #   uses: "marvinpinto/action-automatic-releases@latest"
    #   with:
    #     repo_token: ${{ github.token }}
    #     automatic_release_tag: "latest"
    #     prerelease: false
    #     title: ${{ github.event.head_commit.message }}
    #     files: |
    #       ./build/web/web-dist.zip


